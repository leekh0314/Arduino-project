/*****************************************************************************
RTrobot.org
禁止用于商业行为                              
*****************************************************************************/

/*****************************************************************************
引脚定义，扩展板链接引脚号请查阅Bobcats说明
/****************************************************************************/
int     SlaveAddress=0x00;      // 定义I2C地址
sbit    SCL=P2^1;               //IIC时钟引脚定义
sbit    SDA=P2^0;		    	//IIC数据引脚定义

/*****************************************************************************
I2C起始信号
*****************************************************************************/
void I2C_Start()
{
	SDA = 1;                    //拉高数据线
	SCL = 1;                    //拉高时钟线
	Delay1us();                 //延时
	SDA = 0;                    //产生下降沿
	Delay1us();                 //延时
	SCL = 0;                    //拉低时钟线
}

/*****************************************************************************
I2C停止信号
*****************************************************************************/
void I2C_Stop()
{
	SDA = 0;                    //拉低数据线
	SCL = 1;                    //拉高时钟线
	Delay1us();                 //延时
	SDA = 1;                    //产生上升沿
	Delay1us();                 //延时
}

/*****************************************************************************
I2C发送应答信号
入口参数:ack (0:ACK 1:NAK)
*****************************************************************************/
void I2C_SendACK(bit ack)
{
    SCL = 0; 
	SDA = ack;                  //写应答信号
    Delay1us();                 //延时
	SCL = 1;                    //拉高时钟线
	Delay1us();                 //延时
	SCL = 0;                    //拉低时钟线
}

/*****************************************************************************
I2C接收应答信号
*****************************************************************************/
bit I2C_RecvACK()
{
    unsigned char wait=0xff;
    SCL = 1;
    while (SDA&&wait--);
    if(wait<=0)
    {
        I2C_Stop();
        return -1;
    }
    SCL = 0;
    Delay1us();
    return 0;
}

/*****************************************************************************
向I2C总线发送一个字节数据
*****************************************************************************/
void I2C_SendByte(unsigned char  dat)
{
	unsigned char i;
	for (i=0; i<8; i++)         //8位计数器
	{
        if(dat&0x80)
            SDA = 1;
        else
            SDA = 0;
        SCL = 1;                //拉高时钟线
		Delay1us();             //延时
		SCL = 0;                //拉低时钟线    
		Delay1us();             //延时
        dat<<=1;
	}
	//I2C_RecvACK();
}

/*****************************************************************************
从I2C总线接收一个字节数据
*****************************************************************************/
unsigned char I2C_RecvByte()
{
	unsigned char i;
	unsigned char dat = 0;
	SDA = 1;                    //使能内部上拉,准备读取数据,
	for (i=0; i<8; i++)         //8位计数器
	{
		dat <<= 1;
		SCL = 1;                //拉高时钟线
		Delay1us();             //延时
		dat |= SDA;             //读数据               
		SCL = 0;                //拉低时钟线
		Delay1us();             //延时
	}
	return dat;
}

/*****************************************************************************
向I2C设备写入一个字节数据
*****************************************************************************/
void Single_WriteI2C(unsigned char REG_Address,unsigned char *REG_data,unsigned char len)
{
	I2C_Start();                            //起始信号
	I2C_SendByte((SlaveAddress<<1)|0x00);   //发送设备地址+写信号
    I2C_RecvACK();
	I2C_SendByte(REG_Address);              //内部寄存器地址，
    I2C_RecvACK();
    while(len)
    {
        I2C_SendByte(*REG_data);                 //内部寄存器数据，
        I2C_RecvACK();
        REG_data++;
        len--;
    }
	I2C_Stop();                             //发送停止信号
}

/*****************************************************************************
从I2C设备读取一个字节数据
*****************************************************************************/
void Single_ReadI2C(unsigned char REG_Address, unsigned char *REG_data,unsigned char len)
{
	I2C_Start();                            //起始信号
	I2C_SendByte((SlaveAddress<<1)|0x00);   //发送设备地址+写信号
    I2C_RecvACK();
	I2C_SendByte(REG_Address);              //发送存储单元地址，从0开始	
    I2C_RecvACK();
	I2C_Start();                            //起始信号
    Delay_Ms(15);
	I2C_SendByte((SlaveAddress<<1)|0x01);   //发送设备地址+读信号
    I2C_RecvACK();

    while(len)
    {
        *REG_data=I2C_RecvByte();
        if (len==1)
            I2C_SendACK(1);
        else
            I2C_SendACK(0);  
        REG_data++;
        len--;
    }
	I2C_Stop();                             //停止信号
}
